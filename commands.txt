git add <datei>  # Datei zum nächsten Commit vormerken
git commit -m "Nachricht"  # Änderungen lokal speichern
git push  # Änderungen auf den Server laden
git status  # zeigt den Zustand des Arbeitsverzeichnisses
mkdir -p <ordner>  # erstellt Ordner
touch <datei>  # erstellt leere Datei
find . -type f ! -path './.git/*' | sort > verzeichnisstruktur.txt  # erzeugt Dateiliste
pytest  # startet Tests
rm -rf .pytest_cache  # entfernt Test-Zwischenspeicher
sed -i 'alt neu' datei  # ersetzt 'alt' durch 'neu'
python src/main.py  # startet den Controller
pytest -q  # Tests ausführen
sudo apt update  # Paketlisten aktualisieren
sudo apt install python3 python3-venv python3-pip  # Python und Tools installieren
pip install -r requirements.txt  # Abhängigkeiten mit pip installieren
git pull  # Änderungen vom Server holen
git branch <name>  # neuen Branch (Entwicklungszweig) erstellen
git checkout <name>  # zu einem Branch wechseln
pip uninstall <paket>  # Paket deinstallieren
python <datei>  # Python-Skript starten
ls  # zeigt Dateien und Ordner an
cd ..  # eine Ebene hoeher wechseln
cp <quelle> <ziel>  # Datei kopieren
mv <quelle> <ziel>  # Datei verschieben oder umbenennen
pwd  # aktuellen Pfad anzeigen
cat <datei>  # Inhalt einer Datei anzeigen
nano <datei>  # einfache Textdatei bearbeiten
grep <wort> <datei>  # nach Text in Datei suchen
python -m pip install <paket>  # Paket per Python installieren
history  # zuvor eingegebene Befehle anzeigen
man <befehl>  # Handbuchseite zu einem Befehl oeffnen
chmod +x <datei.sh>  # Datei ausfuehrbar machen
tar -czf <archiv.tar.gz> <ordner>  # Verzeichnis als Archiv packen
sudo <befehl>  # Befehl mit Administratorrechten ausfuehren
